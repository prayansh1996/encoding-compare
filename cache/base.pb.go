// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache/base.proto

package cache

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Photo_Type int32

const (
	Photo_UNKNOWN_TYPE Photo_Type = 0
	Photo_USER         Photo_Type = 1
)

var Photo_Type_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "USER",
}

var Photo_Type_value = map[string]int32{
	"UNKNOWN_TYPE": 0,
	"USER":         1,
}

func (x Photo_Type) String() string {
	return proto.EnumName(Photo_Type_name, int32(x))
}

func (Photo_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 0}
}

type Photo_SomeCategory int32

const (
	Photo_UNKNOWN_SOME_CATEGORY Photo_SomeCategory = 0
	Photo_SOME_PAGE             Photo_SomeCategory = 1
)

var Photo_SomeCategory_name = map[int32]string{
	0: "UNKNOWN_SOME_CATEGORY",
	1: "SOME_PAGE",
}

var Photo_SomeCategory_value = map[string]int32{
	"UNKNOWN_SOME_CATEGORY": 0,
	"SOME_PAGE":             1,
}

func (x Photo_SomeCategory) String() string {
	return proto.EnumName(Photo_SomeCategory_name, int32(x))
}

func (Photo_SomeCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 1}
}

type Photo_EntityType int32

const (
	Photo_UNKNOWN_ENTITY_TYPE Photo_EntityType = 0
	Photo_SOME_TYPE           Photo_EntityType = 1
)

var Photo_EntityType_name = map[int32]string{
	0: "UNKNOWN_ENTITY_TYPE",
	1: "SOME_TYPE",
}

var Photo_EntityType_value = map[string]int32{
	"UNKNOWN_ENTITY_TYPE": 0,
	"SOME_TYPE":           1,
}

func (x Photo_EntityType) String() string {
	return proto.EnumName(Photo_EntityType_name, int32(x))
}

func (Photo_EntityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 2}
}

type Photo_SomeOtherCategory int32

const (
	Photo_UNKNOWN_CONTENT_CATEGORY Photo_SomeOtherCategory = 0
	Photo_SOME_OTHER_CATEGORY      Photo_SomeOtherCategory = 3
)

var Photo_SomeOtherCategory_name = map[int32]string{
	0: "UNKNOWN_CONTENT_CATEGORY",
	3: "SOME_OTHER_CATEGORY",
}

var Photo_SomeOtherCategory_value = map[string]int32{
	"UNKNOWN_CONTENT_CATEGORY": 0,
	"SOME_OTHER_CATEGORY":      3,
}

func (x Photo_SomeOtherCategory) String() string {
	return proto.EnumName(Photo_SomeOtherCategory_name, int32(x))
}

func (Photo_SomeOtherCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 3}
}

type Photo_Source int32

const (
	Photo_UNKNOWN_SOURCE Photo_Source = 0
	Photo_WEB            Photo_Source = 1
	Photo_ANDROID        Photo_Source = 2
)

var Photo_Source_name = map[int32]string{
	0: "UNKNOWN_SOURCE",
	1: "WEB",
	2: "ANDROID",
}

var Photo_Source_value = map[string]int32{
	"UNKNOWN_SOURCE": 0,
	"WEB":            1,
	"ANDROID":        2,
}

func (x Photo_Source) String() string {
	return proto.EnumName(Photo_Source_name, int32(x))
}

func (Photo_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 4}
}

type Photo_ActiveStatus int32

const (
	Photo_UNKNOWN_ACTIVE_STATUS Photo_ActiveStatus = 0
	Photo_ACTIVE                Photo_ActiveStatus = 1
	Photo_DELETED               Photo_ActiveStatus = 2
)

var Photo_ActiveStatus_name = map[int32]string{
	0: "UNKNOWN_ACTIVE_STATUS",
	1: "ACTIVE",
	2: "DELETED",
}

var Photo_ActiveStatus_value = map[string]int32{
	"UNKNOWN_ACTIVE_STATUS": 0,
	"ACTIVE":                1,
	"DELETED":               2,
}

func (x Photo_ActiveStatus) String() string {
	return proto.EnumName(Photo_ActiveStatus_name, int32(x))
}

func (Photo_ActiveStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 5}
}

type Photo_SomeStatus int32

const (
	Photo_UNKNOWN_SOME_STATUS Photo_SomeStatus = 0
	Photo_STATUS              Photo_SomeStatus = 1
)

var Photo_SomeStatus_name = map[int32]string{
	0: "UNKNOWN_SOME_STATUS",
	1: "STATUS",
}

var Photo_SomeStatus_value = map[string]int32{
	"UNKNOWN_SOME_STATUS": 0,
	"STATUS":              1,
}

func (x Photo_SomeStatus) String() string {
	return proto.EnumName(Photo_SomeStatus_name, int32(x))
}

func (Photo_SomeStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 6}
}

type Photo_DeletionReason int32

const (
	Photo_UNKNOWN_DELETION_REASON Photo_DeletionReason = 0
	Photo_SOME_REASON             Photo_DeletionReason = 1
)

var Photo_DeletionReason_name = map[int32]string{
	0: "UNKNOWN_DELETION_REASON",
	1: "SOME_REASON",
}

var Photo_DeletionReason_value = map[string]int32{
	"UNKNOWN_DELETION_REASON": 0,
	"SOME_REASON":             1,
}

func (x Photo_DeletionReason) String() string {
	return proto.EnumName(Photo_DeletionReason_name, int32(x))
}

func (Photo_DeletionReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0, 7}
}

type ClassificationData_ClassificationCategory int32

const (
	ClassificationData_SOME_CLASSIFICATION_CATEGORY ClassificationData_ClassificationCategory = 0
)

var ClassificationData_ClassificationCategory_name = map[int32]string{
	0: "SOME_CLASSIFICATION_CATEGORY",
}

var ClassificationData_ClassificationCategory_value = map[string]int32{
	"SOME_CLASSIFICATION_CATEGORY": 0,
}

func (x ClassificationData_ClassificationCategory) String() string {
	return proto.EnumName(ClassificationData_ClassificationCategory_name, int32(x))
}

func (ClassificationData_ClassificationCategory) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{5, 0}
}

type Photo struct {
	Id                   int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoId              string                  `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	TypeField            Photo_Type              `protobuf:"varint,3,opt,name=type_field,json=typeField,proto3,enum=Photo_Type" json:"type_field,omitempty"`
	SomeCategory         Photo_SomeCategory      `protobuf:"varint,4,opt,name=some_category,json=someCategory,proto3,enum=Photo_SomeCategory" json:"some_category,omitempty"`
	EntityType           Photo_EntityType        `protobuf:"varint,5,opt,name=entity_type,json=entityType,proto3,enum=Photo_EntityType" json:"entity_type,omitempty"`
	EntityId             int64                   `protobuf:"varint,6,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Hash                 string                  `protobuf:"bytes,7,opt,name=hash,proto3" json:"hash,omitempty"`
	SomeOtherCategory    Photo_SomeOtherCategory `protobuf:"varint,8,opt,name=some_other_category,json=someOtherCategory,proto3,enum=Photo_SomeOtherCategory" json:"some_other_category,omitempty"`
	UserId               int64                   `protobuf:"varint,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp            int64                   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UpdateTimestamp      int64                   `protobuf:"varint,23,opt,name=update_timestamp,json=updateTimestamp,proto3" json:"update_timestamp,omitempty"`
	Filename             string                  `protobuf:"bytes,11,opt,name=filename,proto3" json:"filename,omitempty"`
	Caption              string                  `protobuf:"bytes,12,opt,name=caption,proto3" json:"caption,omitempty"`
	Source               Photo_Source            `protobuf:"varint,13,opt,name=source,proto3,enum=Photo_Source" json:"source,omitempty"`
	ActiveStatus         Photo_ActiveStatus      `protobuf:"varint,14,opt,name=active_status,json=activeStatus,proto3,enum=Photo_ActiveStatus" json:"active_status,omitempty"`
	Width                int64                   `protobuf:"varint,15,opt,name=width,proto3" json:"width,omitempty"`
	Height               int64                   `protobuf:"varint,16,opt,name=height,proto3" json:"height,omitempty"`
	SomeStatus           Photo_SomeStatus        `protobuf:"varint,17,opt,name=some_status,json=someStatus,proto3,enum=Photo_SomeStatus" json:"some_status,omitempty"`
	SomethingBy          int64                   `protobuf:"varint,18,opt,name=something_by,json=somethingBy,proto3" json:"something_by,omitempty"`
	SomethingTimestamp   int64                   `protobuf:"varint,19,opt,name=something_timestamp,json=somethingTimestamp,proto3" json:"something_timestamp,omitempty"`
	Position             int64                   `protobuf:"varint,20,opt,name=position,proto3" json:"position,omitempty"`
	DeletionReason       Photo_DeletionReason    `protobuf:"varint,21,opt,name=deletion_reason,json=deletionReason,proto3,enum=Photo_DeletionReason" json:"deletion_reason,omitempty"`
	Metadata             *Metadata               `protobuf:"bytes,22,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Url                  string                  `protobuf:"bytes,24,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Photo) Reset()         { *m = Photo{} }
func (m *Photo) String() string { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()    {}
func (*Photo) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{0}
}

func (m *Photo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Photo.Unmarshal(m, b)
}
func (m *Photo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Photo.Marshal(b, m, deterministic)
}
func (m *Photo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Photo.Merge(m, src)
}
func (m *Photo) XXX_Size() int {
	return xxx_messageInfo_Photo.Size(m)
}
func (m *Photo) XXX_DiscardUnknown() {
	xxx_messageInfo_Photo.DiscardUnknown(m)
}

var xxx_messageInfo_Photo proto.InternalMessageInfo

func (m *Photo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Photo) GetPhotoId() string {
	if m != nil {
		return m.PhotoId
	}
	return ""
}

func (m *Photo) GetTypeField() Photo_Type {
	if m != nil {
		return m.TypeField
	}
	return Photo_UNKNOWN_TYPE
}

func (m *Photo) GetSomeCategory() Photo_SomeCategory {
	if m != nil {
		return m.SomeCategory
	}
	return Photo_UNKNOWN_SOME_CATEGORY
}

func (m *Photo) GetEntityType() Photo_EntityType {
	if m != nil {
		return m.EntityType
	}
	return Photo_UNKNOWN_ENTITY_TYPE
}

func (m *Photo) GetEntityId() int64 {
	if m != nil {
		return m.EntityId
	}
	return 0
}

func (m *Photo) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Photo) GetSomeOtherCategory() Photo_SomeOtherCategory {
	if m != nil {
		return m.SomeOtherCategory
	}
	return Photo_UNKNOWN_CONTENT_CATEGORY
}

func (m *Photo) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Photo) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Photo) GetUpdateTimestamp() int64 {
	if m != nil {
		return m.UpdateTimestamp
	}
	return 0
}

func (m *Photo) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Photo) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *Photo) GetSource() Photo_Source {
	if m != nil {
		return m.Source
	}
	return Photo_UNKNOWN_SOURCE
}

func (m *Photo) GetActiveStatus() Photo_ActiveStatus {
	if m != nil {
		return m.ActiveStatus
	}
	return Photo_UNKNOWN_ACTIVE_STATUS
}

func (m *Photo) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Photo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Photo) GetSomeStatus() Photo_SomeStatus {
	if m != nil {
		return m.SomeStatus
	}
	return Photo_UNKNOWN_SOME_STATUS
}

func (m *Photo) GetSomethingBy() int64 {
	if m != nil {
		return m.SomethingBy
	}
	return 0
}

func (m *Photo) GetSomethingTimestamp() int64 {
	if m != nil {
		return m.SomethingTimestamp
	}
	return 0
}

func (m *Photo) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *Photo) GetDeletionReason() Photo_DeletionReason {
	if m != nil {
		return m.DeletionReason
	}
	return Photo_UNKNOWN_DELETION_REASON
}

func (m *Photo) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Photo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Metadata struct {
	Tags                 *Tags               `protobuf:"bytes,1,opt,name=tags,proto3" json:"tags,omitempty"`
	QualityData          *QualityData        `protobuf:"bytes,2,opt,name=quality_data,json=qualityData,proto3" json:"quality_data,omitempty"`
	CropData             *CropData           `protobuf:"bytes,3,opt,name=crop_data,json=cropData,proto3" json:"crop_data,omitempty"`
	ClassificationData   *ClassificationData `protobuf:"bytes,4,opt,name=classification_data,json=classificationData,proto3" json:"classification_data,omitempty"`
	SomeId               string              `protobuf:"bytes,5,opt,name=some_id,json=someId,proto3" json:"some_id,omitempty"`
	DeduplicationData    *DeduplicationData  `protobuf:"bytes,7,opt,name=deduplication_data,json=deduplicationData,proto3" json:"deduplication_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{1}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetTags() *Tags {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Metadata) GetQualityData() *QualityData {
	if m != nil {
		return m.QualityData
	}
	return nil
}

func (m *Metadata) GetCropData() *CropData {
	if m != nil {
		return m.CropData
	}
	return nil
}

func (m *Metadata) GetClassificationData() *ClassificationData {
	if m != nil {
		return m.ClassificationData
	}
	return nil
}

func (m *Metadata) GetSomeId() string {
	if m != nil {
		return m.SomeId
	}
	return ""
}

func (m *Metadata) GetDeduplicationData() *DeduplicationData {
	if m != nil {
		return m.DeduplicationData
	}
	return nil
}

type Tags struct {
	UserIds              []int64  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tags) Reset()         { *m = Tags{} }
func (m *Tags) String() string { return proto.CompactTextString(m) }
func (*Tags) ProtoMessage()    {}
func (*Tags) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{2}
}

func (m *Tags) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tags.Unmarshal(m, b)
}
func (m *Tags) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tags.Marshal(b, m, deterministic)
}
func (m *Tags) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tags.Merge(m, src)
}
func (m *Tags) XXX_Size() int {
	return xxx_messageInfo_Tags.Size(m)
}
func (m *Tags) XXX_DiscardUnknown() {
	xxx_messageInfo_Tags.DiscardUnknown(m)
}

var xxx_messageInfo_Tags proto.InternalMessageInfo

func (m *Tags) GetUserIds() []int64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type CropData struct {
	CropDataPresent      bool     `protobuf:"varint,1,opt,name=crop_data_present,json=cropDataPresent,proto3" json:"crop_data_present,omitempty"`
	ClusterBoundingBox   []int64  `protobuf:"varint,2,rep,packed,name=cluster_bounding_box,json=clusterBoundingBox,proto3" json:"cluster_bounding_box,omitempty"`
	XOffset              int64    `protobuf:"varint,3,opt,name=xOffset,proto3" json:"xOffset,omitempty"`
	YOffset              int64    `protobuf:"varint,4,opt,name=yOffset,proto3" json:"yOffset,omitempty"`
	Height               int64    `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Width                int64    `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CropData) Reset()         { *m = CropData{} }
func (m *CropData) String() string { return proto.CompactTextString(m) }
func (*CropData) ProtoMessage()    {}
func (*CropData) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{3}
}

func (m *CropData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CropData.Unmarshal(m, b)
}
func (m *CropData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CropData.Marshal(b, m, deterministic)
}
func (m *CropData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CropData.Merge(m, src)
}
func (m *CropData) XXX_Size() int {
	return xxx_messageInfo_CropData.Size(m)
}
func (m *CropData) XXX_DiscardUnknown() {
	xxx_messageInfo_CropData.DiscardUnknown(m)
}

var xxx_messageInfo_CropData proto.InternalMessageInfo

func (m *CropData) GetCropDataPresent() bool {
	if m != nil {
		return m.CropDataPresent
	}
	return false
}

func (m *CropData) GetClusterBoundingBox() []int64 {
	if m != nil {
		return m.ClusterBoundingBox
	}
	return nil
}

func (m *CropData) GetXOffset() int64 {
	if m != nil {
		return m.XOffset
	}
	return 0
}

func (m *CropData) GetYOffset() int64 {
	if m != nil {
		return m.YOffset
	}
	return 0
}

func (m *CropData) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *CropData) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

type QualityData struct {
	QualityDataPresent   bool     `protobuf:"varint,1,opt,name=quality_data_present,json=qualityDataPresent,proto3" json:"quality_data_present,omitempty"`
	QualityScore         float32  `protobuf:"fixed32,2,opt,name=quality_score,json=qualityScore,proto3" json:"quality_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualityData) Reset()         { *m = QualityData{} }
func (m *QualityData) String() string { return proto.CompactTextString(m) }
func (*QualityData) ProtoMessage()    {}
func (*QualityData) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{4}
}

func (m *QualityData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualityData.Unmarshal(m, b)
}
func (m *QualityData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualityData.Marshal(b, m, deterministic)
}
func (m *QualityData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualityData.Merge(m, src)
}
func (m *QualityData) XXX_Size() int {
	return xxx_messageInfo_QualityData.Size(m)
}
func (m *QualityData) XXX_DiscardUnknown() {
	xxx_messageInfo_QualityData.DiscardUnknown(m)
}

var xxx_messageInfo_QualityData proto.InternalMessageInfo

func (m *QualityData) GetQualityDataPresent() bool {
	if m != nil {
		return m.QualityDataPresent
	}
	return false
}

func (m *QualityData) GetQualityScore() float32 {
	if m != nil {
		return m.QualityScore
	}
	return 0
}

type ClassificationData struct {
	ClassificationDataPresent bool                                      `protobuf:"varint,1,opt,name=classification_data_present,json=classificationDataPresent,proto3" json:"classification_data_present,omitempty"`
	ClassificationCategory    ClassificationData_ClassificationCategory `protobuf:"varint,2,opt,name=classification_category,json=classificationCategory,proto3,enum=ClassificationData_ClassificationCategory" json:"classification_category,omitempty"`
	Probability               float32                                   `protobuf:"fixed32,3,opt,name=probability,proto3" json:"probability,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                  `json:"-"`
	XXX_unrecognized          []byte                                    `json:"-"`
	XXX_sizecache             int32                                     `json:"-"`
}

func (m *ClassificationData) Reset()         { *m = ClassificationData{} }
func (m *ClassificationData) String() string { return proto.CompactTextString(m) }
func (*ClassificationData) ProtoMessage()    {}
func (*ClassificationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{5}
}

func (m *ClassificationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassificationData.Unmarshal(m, b)
}
func (m *ClassificationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassificationData.Marshal(b, m, deterministic)
}
func (m *ClassificationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassificationData.Merge(m, src)
}
func (m *ClassificationData) XXX_Size() int {
	return xxx_messageInfo_ClassificationData.Size(m)
}
func (m *ClassificationData) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassificationData.DiscardUnknown(m)
}

var xxx_messageInfo_ClassificationData proto.InternalMessageInfo

func (m *ClassificationData) GetClassificationDataPresent() bool {
	if m != nil {
		return m.ClassificationDataPresent
	}
	return false
}

func (m *ClassificationData) GetClassificationCategory() ClassificationData_ClassificationCategory {
	if m != nil {
		return m.ClassificationCategory
	}
	return ClassificationData_SOME_CLASSIFICATION_CATEGORY
}

func (m *ClassificationData) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

type DeduplicationData struct {
	IsDeduplicationDataPresent bool     `protobuf:"varint,1,opt,name=is_deduplication_data_present,json=isDeduplicationDataPresent,proto3" json:"is_deduplication_data_present,omitempty"`
	DuplicatePhotoId           string   `protobuf:"bytes,2,opt,name=duplicate_photo_id,json=duplicatePhotoId,proto3" json:"duplicate_photo_id,omitempty"`
	SimilarityScore            float32  `protobuf:"fixed32,3,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"`
	XXX_NoUnkeyedLiteral       struct{} `json:"-"`
	XXX_unrecognized           []byte   `json:"-"`
	XXX_sizecache              int32    `json:"-"`
}

func (m *DeduplicationData) Reset()         { *m = DeduplicationData{} }
func (m *DeduplicationData) String() string { return proto.CompactTextString(m) }
func (*DeduplicationData) ProtoMessage()    {}
func (*DeduplicationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_14153254f3ba3f18, []int{6}
}

func (m *DeduplicationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeduplicationData.Unmarshal(m, b)
}
func (m *DeduplicationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeduplicationData.Marshal(b, m, deterministic)
}
func (m *DeduplicationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeduplicationData.Merge(m, src)
}
func (m *DeduplicationData) XXX_Size() int {
	return xxx_messageInfo_DeduplicationData.Size(m)
}
func (m *DeduplicationData) XXX_DiscardUnknown() {
	xxx_messageInfo_DeduplicationData.DiscardUnknown(m)
}

var xxx_messageInfo_DeduplicationData proto.InternalMessageInfo

func (m *DeduplicationData) GetIsDeduplicationDataPresent() bool {
	if m != nil {
		return m.IsDeduplicationDataPresent
	}
	return false
}

func (m *DeduplicationData) GetDuplicatePhotoId() string {
	if m != nil {
		return m.DuplicatePhotoId
	}
	return ""
}

func (m *DeduplicationData) GetSimilarityScore() float32 {
	if m != nil {
		return m.SimilarityScore
	}
	return 0
}

func init() {
	proto.RegisterEnum("Photo_Type", Photo_Type_name, Photo_Type_value)
	proto.RegisterEnum("Photo_SomeCategory", Photo_SomeCategory_name, Photo_SomeCategory_value)
	proto.RegisterEnum("Photo_EntityType", Photo_EntityType_name, Photo_EntityType_value)
	proto.RegisterEnum("Photo_SomeOtherCategory", Photo_SomeOtherCategory_name, Photo_SomeOtherCategory_value)
	proto.RegisterEnum("Photo_Source", Photo_Source_name, Photo_Source_value)
	proto.RegisterEnum("Photo_ActiveStatus", Photo_ActiveStatus_name, Photo_ActiveStatus_value)
	proto.RegisterEnum("Photo_SomeStatus", Photo_SomeStatus_name, Photo_SomeStatus_value)
	proto.RegisterEnum("Photo_DeletionReason", Photo_DeletionReason_name, Photo_DeletionReason_value)
	proto.RegisterEnum("ClassificationData_ClassificationCategory", ClassificationData_ClassificationCategory_name, ClassificationData_ClassificationCategory_value)
	proto.RegisterType((*Photo)(nil), "Photo")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterType((*Tags)(nil), "Tags")
	proto.RegisterType((*CropData)(nil), "CropData")
	proto.RegisterType((*QualityData)(nil), "QualityData")
	proto.RegisterType((*ClassificationData)(nil), "ClassificationData")
	proto.RegisterType((*DeduplicationData)(nil), "DeduplicationData")
}

func init() { proto.RegisterFile("cache/base.proto", fileDescriptor_14153254f3ba3f18) }

var fileDescriptor_14153254f3ba3f18 = []byte{
	// 1161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x56, 0xdb, 0x8e, 0xda, 0x56,
	0x17, 0x1e, 0x73, 0x66, 0xc1, 0x80, 0x59, 0x24, 0x83, 0x27, 0xc9, 0x2f, 0x4d, 0xfc, 0x2b, 0xd5,
	0x24, 0xaa, 0x48, 0x3b, 0xed, 0x45, 0xd4, 0x8b, 0x48, 0x1c, 0x9c, 0x84, 0x36, 0x81, 0xa9, 0xf1,
	0x34, 0x4a, 0x6f, 0x2c, 0x63, 0xef, 0x19, 0x2c, 0x01, 0x76, 0xbc, 0x4d, 0x1b, 0x9e, 0xa4, 0xb7,
	0x7d, 0x83, 0xbe, 0x47, 0x1f, 0xa0, 0xcf, 0x53, 0xed, 0xe5, 0x23, 0x30, 0xbd, 0xdb, 0xeb, 0xfb,
	0xd6, 0x61, 0xaf, 0x83, 0x97, 0x37, 0xc8, 0xb6, 0x65, 0x2f, 0xd9, 0xcb, 0x85, 0xc5, 0x59, 0xdf,
	0x0f, 0xbc, 0xd0, 0x53, 0xff, 0x01, 0x28, 0x5f, 0x2f, 0xbd, 0xd0, 0xc3, 0x16, 0x14, 0x5c, 0x47,
	0x91, 0x2e, 0xa4, 0xcb, 0xa2, 0x5e, 0x70, 0x1d, 0x3c, 0x87, 0x9a, 0x2f, 0x08, 0xd3, 0x75, 0x94,
	0xc2, 0x85, 0x74, 0x59, 0xd7, 0xab, 0x24, 0x4f, 0x1c, 0x7c, 0x01, 0x10, 0xee, 0x7c, 0x66, 0xde,
	0xba, 0x6c, 0xe5, 0x28, 0xc5, 0x0b, 0xe9, 0xb2, 0x75, 0xd5, 0xe8, 0x93, 0x9b, 0xbe, 0xb1, 0xf3,
	0x99, 0x5e, 0x17, 0xf4, 0x1b, 0xc1, 0xe2, 0x2b, 0x38, 0xe5, 0xde, 0x9a, 0x99, 0xb6, 0x15, 0xb2,
	0x3b, 0x2f, 0xd8, 0x29, 0x25, 0x52, 0xef, 0xc6, 0xea, 0x73, 0x6f, 0xcd, 0x46, 0x31, 0xa5, 0x37,
	0x79, 0x4e, 0xc2, 0x2b, 0x68, 0xb0, 0x4d, 0xe8, 0x86, 0x3b, 0x53, 0x78, 0x53, 0xca, 0x64, 0xd7,
	0x89, 0xed, 0x34, 0x62, 0x28, 0x18, 0xb0, 0xf4, 0x8c, 0x8f, 0xa1, 0x1e, 0xdb, 0xb8, 0x8e, 0x52,
	0xa1, 0x5c, 0x6a, 0x11, 0x30, 0x71, 0x10, 0xa1, 0xb4, 0xb4, 0xf8, 0x52, 0xa9, 0x52, 0x36, 0x74,
	0xc6, 0x77, 0xd0, 0xa5, 0xeb, 0x79, 0xe1, 0x92, 0x05, 0xd9, 0x25, 0x6b, 0x14, 0x4c, 0xc9, 0x5d,
	0x72, 0x26, 0x14, 0xd2, 0x9b, 0x76, 0xf8, 0x21, 0x84, 0x3d, 0xa8, 0x6e, 0x39, 0x0b, 0x44, 0xe0,
	0x3a, 0x05, 0xae, 0x08, 0x71, 0xe2, 0xe0, 0x13, 0xa8, 0x87, 0xee, 0x9a, 0xf1, 0xd0, 0x5a, 0xfb,
	0x0a, 0x10, 0x95, 0x01, 0xf8, 0x1c, 0xe4, 0xad, 0xef, 0x58, 0x21, 0x33, 0x33, 0xa5, 0x1e, 0x29,
	0xb5, 0x23, 0xdc, 0x48, 0x55, 0x1f, 0x41, 0xed, 0xd6, 0x5d, 0xb1, 0x8d, 0xb5, 0x66, 0x4a, 0x83,
	0x72, 0x48, 0x65, 0x54, 0xa0, 0x6a, 0x5b, 0x7e, 0xe8, 0x7a, 0x1b, 0xa5, 0x19, 0x35, 0x2b, 0x16,
	0xf1, 0x19, 0x54, 0xb8, 0xb7, 0x0d, 0x6c, 0xa6, 0x9c, 0x52, 0x52, 0xa7, 0x69, 0x52, 0x02, 0xd4,
	0x63, 0x52, 0xf4, 0xc9, 0xb2, 0x43, 0xf7, 0x37, 0x66, 0xf2, 0xd0, 0x0a, 0xb7, 0x5c, 0x69, 0xed,
	0xf5, 0x69, 0x40, 0xdc, 0x9c, 0x28, 0xbd, 0x69, 0xe5, 0x24, 0x7c, 0x00, 0xe5, 0xdf, 0x5d, 0x27,
	0x5c, 0x2a, 0x6d, 0xba, 0x76, 0x24, 0xe0, 0x19, 0x54, 0x96, 0xcc, 0xbd, 0x5b, 0x86, 0x8a, 0x1c,
	0x55, 0x23, 0x92, 0x44, 0x57, 0xa9, 0xe0, 0x71, 0x94, 0xce, 0x5e, 0x57, 0x45, 0xa1, 0xe3, 0x18,
	0xc0, 0xd3, 0x33, 0x3e, 0x05, 0x9a, 0x8c, 0x70, 0xe9, 0x6e, 0xee, 0xcc, 0xc5, 0x4e, 0x41, 0xf2,
	0xd8, 0x48, 0xb1, 0xe1, 0x0e, 0x5f, 0x46, 0x7d, 0x8c, 0x54, 0xb2, 0x4a, 0x76, 0x49, 0x13, 0x53,
	0x6a, 0xaf, 0x98, 0xbe, 0xc7, 0x5d, 0xaa, 0xd8, 0x83, 0x68, 0x50, 0x12, 0x19, 0x5f, 0x43, 0xdb,
	0x61, 0x2b, 0x26, 0xce, 0x66, 0xc0, 0x2c, 0xee, 0x6d, 0x94, 0x87, 0x74, 0xcf, 0x87, 0xf1, 0x3d,
	0xc7, 0x31, 0xab, 0x13, 0xa9, 0xb7, 0x9c, 0x3d, 0x19, 0x9f, 0x41, 0x6d, 0xcd, 0x42, 0xcb, 0xb1,
	0x42, 0x4b, 0x39, 0xbb, 0x90, 0x2e, 0x1b, 0x57, 0xf5, 0xfe, 0x87, 0x18, 0xd0, 0x53, 0x0a, 0x65,
	0x28, 0x6e, 0x83, 0x95, 0xa2, 0x50, 0xbf, 0xc4, 0x51, 0x55, 0xa1, 0x44, 0x63, 0x2c, 0x43, 0xf3,
	0x66, 0xfa, 0xd3, 0x74, 0xf6, 0x71, 0x6a, 0x1a, 0x9f, 0xae, 0x35, 0xf9, 0x04, 0x6b, 0x50, 0xba,
	0x99, 0x6b, 0xba, 0x2c, 0xa9, 0xaf, 0xa0, 0x99, 0xff, 0x68, 0xf0, 0x1c, 0x1e, 0x26, 0xba, 0xf3,
	0xd9, 0x07, 0xcd, 0x1c, 0x0d, 0x0c, 0xed, 0xed, 0x4c, 0xff, 0x24, 0x9f, 0xe0, 0x29, 0xd4, 0x09,
	0xba, 0x1e, 0xbc, 0xd5, 0x64, 0x49, 0xfd, 0x1e, 0x20, 0xfb, 0x6c, 0xb0, 0x07, 0xdd, 0xc4, 0x4e,
	0x9b, 0x1a, 0x13, 0xe3, 0x53, 0x12, 0x2a, 0xb1, 0x22, 0x51, 0x52, 0x7f, 0x84, 0xce, 0xd1, 0xfc,
	0xe3, 0x13, 0x50, 0x12, 0xe3, 0xd1, 0x6c, 0x6a, 0x68, 0x53, 0x23, 0x1f, 0xb7, 0x07, 0x5d, 0xf2,
	0x30, 0x33, 0xde, 0x69, 0x7a, 0x46, 0x14, 0xd5, 0x2b, 0xa8, 0x44, 0x63, 0x87, 0x08, 0xad, 0xec,
	0xd6, 0x37, 0xfa, 0x48, 0x04, 0xae, 0x42, 0xf1, 0xa3, 0x36, 0x94, 0x25, 0x6c, 0x40, 0x75, 0x30,
	0x1d, 0xeb, 0xb3, 0xc9, 0x58, 0x2e, 0xa8, 0x43, 0x68, 0xe6, 0x87, 0x2f, 0x9f, 0xef, 0x60, 0x64,
	0x4c, 0x7e, 0xd1, 0xcc, 0xb9, 0x31, 0x30, 0x6e, 0xe6, 0xf2, 0x09, 0x02, 0x54, 0x22, 0x28, 0xf2,
	0x31, 0xd6, 0xde, 0x6b, 0x86, 0x26, 0x7c, 0x7c, 0x0b, 0x90, 0x8d, 0x56, 0x3e, 0x73, 0xba, 0x66,
	0xde, 0x3e, 0x3e, 0x4b, 0xea, 0x6b, 0x68, 0xed, 0x77, 0x19, 0x1f, 0x43, 0x2f, 0x31, 0x23, 0xcf,
	0x93, 0xd9, 0xd4, 0xd4, 0xb5, 0xc1, 0x7c, 0x36, 0x95, 0x4f, 0xb0, 0x0d, 0x0d, 0xf2, 0x15, 0x03,
	0x92, 0xfa, 0x67, 0x01, 0x6a, 0x49, 0xcf, 0xf1, 0x1c, 0x4a, 0xa1, 0x75, 0xc7, 0x69, 0xbb, 0x36,
	0xae, 0xca, 0x7d, 0xc3, 0xba, 0xe3, 0x3a, 0x41, 0xf8, 0x12, 0x9a, 0x9f, 0xb7, 0xd6, 0x4a, 0xac,
	0x2c, 0x9a, 0x97, 0x02, 0xa9, 0x34, 0xfb, 0x3f, 0x47, 0xe0, 0x58, 0x8c, 0x4c, 0xe3, 0x73, 0x26,
	0xe0, 0x57, 0x50, 0xb7, 0x03, 0xcf, 0x8f, 0xb4, 0x8b, 0xf1, 0x74, 0x8d, 0x02, 0xcf, 0x27, 0xd5,
	0x9a, 0x1d, 0x9f, 0x70, 0x0c, 0x5d, 0x7b, 0x65, 0x71, 0xee, 0xde, 0xba, 0xb6, 0x45, 0xa3, 0x4c,
	0x16, 0x25, 0xb2, 0xe8, 0xf6, 0x47, 0x7b, 0x1c, 0xd9, 0xa2, 0x7d, 0x84, 0x89, 0xad, 0x46, 0x9f,
	0xab, 0xeb, 0xd0, 0x02, 0xae, 0x8b, 0x7d, 0xb1, 0x66, 0x13, 0x07, 0x07, 0x80, 0x0e, 0x73, 0xb6,
	0xfe, 0x6a, 0xcf, 0x7b, 0x95, 0xbc, 0x63, 0x7f, 0x9c, 0xa7, 0xc8, 0x79, 0xc7, 0x39, 0x84, 0xd4,
	0xa7, 0x50, 0x12, 0x85, 0x10, 0x7f, 0x9a, 0x78, 0x73, 0x8a, 0x0a, 0x15, 0x2f, 0x8b, 0x7a, 0x35,
	0x5a, 0x9d, 0x5c, 0xfd, 0x5b, 0x82, 0x5a, 0x92, 0x1b, 0xbe, 0x80, 0x4e, 0x9a, 0xb9, 0xe9, 0x07,
	0x8c, 0xb3, 0x4d, 0x48, 0x25, 0xad, 0xe9, 0xed, 0x24, 0xed, 0xeb, 0x08, 0xc6, 0x6f, 0xe0, 0x81,
	0xbd, 0xda, 0xf2, 0x90, 0x05, 0xe6, 0xc2, 0xdb, 0x6e, 0x1c, 0xda, 0x1c, 0xde, 0x17, 0xa5, 0x40,
	0xfe, 0x31, 0xe6, 0x86, 0x31, 0x35, 0xf4, 0xbe, 0x88, 0x0d, 0xfa, 0x65, 0x76, 0x7b, 0xcb, 0x59,
	0x48, 0x55, 0x2d, 0xea, 0x89, 0x28, 0x98, 0x5d, 0xcc, 0x94, 0x22, 0x26, 0x16, 0x73, 0x4b, 0xae,
	0xbc, 0xb7, 0xe4, 0xd2, 0x95, 0x58, 0xc9, 0xad, 0x44, 0xd5, 0x81, 0x46, 0xae, 0xab, 0xe2, 0x8a,
	0xf9, 0xce, 0x1f, 0x64, 0x84, 0xb9, 0x9e, 0x27, 0x49, 0xfd, 0x1f, 0x4e, 0x13, 0x0b, 0x6e, 0x7b,
	0x01, 0xa3, 0x61, 0x29, 0xe8, 0xc9, 0x00, 0xcd, 0x05, 0xa6, 0xfe, 0x51, 0x00, 0x3c, 0x6e, 0x2e,
	0xbe, 0x86, 0xc7, 0xf7, 0x8c, 0xc3, 0x41, 0xd0, 0xf3, 0xe3, 0x09, 0x48, 0x62, 0xdb, 0xd0, 0x3b,
	0xb0, 0x4f, 0x7f, 0x96, 0x05, 0xda, 0x8d, 0x2f, 0xee, 0x19, 0xa9, 0x03, 0x28, 0xfd, 0x7d, 0x9e,
	0xd9, 0xf7, 0xe2, 0x78, 0x01, 0x0d, 0x3f, 0xf0, 0x16, 0xd6, 0xc2, 0x15, 0xf9, 0x50, 0x1f, 0x0a,
	0x7a, 0x1e, 0x52, 0x7f, 0x80, 0xb3, 0xd1, 0x7f, 0xd9, 0x3e, 0x89, 0xf6, 0xdf, 0xfb, 0xc1, 0x7c,
	0x3e, 0x79, 0x33, 0x19, 0x0d, 0xe8, 0x0b, 0xcd, 0xd6, 0x92, 0xfa, 0x97, 0x04, 0x9d, 0xa3, 0xc1,
	0xc4, 0x01, 0xfc, 0xcf, 0xe5, 0xe6, 0xf1, 0x2c, 0x1f, 0x94, 0xe6, 0x91, 0xcb, 0x8f, 0x6c, 0x93,
	0xda, 0x7c, 0x0d, 0x98, 0x30, 0xcc, 0x3c, 0x78, 0x34, 0xc9, 0x29, 0x73, 0x1d, 0xbf, 0x9e, 0x9e,
	0x83, 0xcc, 0xdd, 0xb5, 0xbb, 0xb2, 0x82, 0xac, 0x91, 0x51, 0xa6, 0xed, 0x0c, 0xa7, 0x5e, 0x0e,
	0xab, 0xbf, 0x96, 0xe9, 0xc5, 0xb6, 0xa8, 0xd0, 0x6b, 0xed, 0xbb, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x7f, 0xb5, 0xa2, 0x93, 0xc1, 0x09, 0x00, 0x00,
}
